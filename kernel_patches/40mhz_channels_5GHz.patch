diff --git a/kernel/drivers/net/wireless/nexmon/wl_cfg80211.c b/kernel/drivers/net/wireless/nexmon/wl_cfg80211.c
index ee13c6d..61b3f30 100644
--- a/kernel/drivers/net/wireless/nexmon/wl_cfg80211.c
+++ b/kernel/drivers/net/wireless/nexmon/wl_cfg80211.c
@@ -5292,6 +5292,8 @@ wl_cfg80211_set_channel(struct wiphy *wiphy, struct net_device *dev,
 	} else if (chan->band == IEEE80211_BAND_2GHZ)
 		bw = WL_CHANSPEC_BW_20;
 set_channel:
+    //NexMon: force channel with to 40 (only works for 5 GHz for now)
+    bw = WL_CHANSPEC_BW_40;
 	chspec = wf_channel2chspec(_chan, bw);
 	if (wf_chspec_valid(chspec)) {
 		fw_chspec = wl_chspec_host_to_driver(chspec);
diff --git a/kernel/net/wireless/nl80211.c b/kernel/net/wireless/nl80211.c
index 3a194bc..96bec47 100644
--- a/kernel/net/wireless/nl80211.c
+++ b/kernel/net/wireless/nl80211.c
@@ -1217,12 +1217,9 @@ static bool nl80211_can_set_dev_channel(struct wireless_dev *wdev)
 	 * whatever else is going on, so they behave as though
 	 * you tried setting the wiphy channel itself.
 	 */
-	return !wdev ||
-		wdev->iftype == NL80211_IFTYPE_AP ||
-		wdev->iftype == NL80211_IFTYPE_WDS ||
-		wdev->iftype == NL80211_IFTYPE_MESH_POINT ||
-		wdev->iftype == NL80211_IFTYPE_MONITOR ||
-		wdev->iftype == NL80211_IFTYPE_P2P_GO;
+
+    //NexMon: disable this check
+    return true;
 }
 
 static int __nl80211_set_channel(struct cfg80211_registered_device *rdev,
@@ -1347,6 +1344,9 @@ static int nl80211_set_wiphy(struct sk_buff *skb, struct genl_info *info)
 	else
 		wdev = NULL;
 
+    //NexMon: set wdev
+    wdev = netdev->ieee80211_ptr;
+
 	/*
 	 * end workaround code, by now the rdev is available
 	 * and locked, and wdev may or may not be NULL.
